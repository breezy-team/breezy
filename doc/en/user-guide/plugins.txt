Using plugins
=============

.. Information on how to use plugins in Breezy.

What is a plugin?
-----------------

A plugin is an external component for Breezy that is typically made by
third parties. A plugin is capable of augmenting Breezy by adding new
functionality.  A plugin can also change current Breezy behavior by
replacing current functionality. Sample applications of plugins are:

* overriding commands
* adding new commands
* providing additional network transports
* customizing log output.

The sky is the limit for the customization that can be done through plugins.
In fact, plugins often work as a way for developers to test new features for
Breezy prior to inclusion in the official codebase. Plugins are helpful
at feature retirement time as well, e.g. deprecated file formats may one
day be removed from the Breezy core and be made available as a plugin instead.

Plugins are good for users, good for external developers and good for
Breezy itself.

Where to find plugins
---------------------

We keep our list of plugins on the http://wiki.breezy-vcs.org/Plugins page.

How to install a plugin
-----------------------

Installing a plugin is very easy! If not already created, create a
``plugins`` directory under your Breezy configuration directory,
``~/.config/breezy/`` on Unix and
``C:\Documents and Settings\<username>\Application Data\Breezy\2.0\``
on Windows. Within this directory (referred to as $BRZ_HOME below),
each plugin is placed in its own subdirectory.

Plugins work particularly well with Breezy branches. For example, to
install the brztools plugins for your main user account on GNU/Linux,
one can perform the following::

    brz branch http://panoramicfeedback.com/opensource/brz/brztools
    ~/.config/breezy/plugins/brztools

When installing plugins, the directories that you install them in must
be valid python identifiers. This means that they can only contain
certain characters, notably they cannot contain hyphens (``-``). Rather
than installing ``brz-gtk`` to ``$BRZ_HOME/plugins/brz-gtk``, install it
to ``$BRZ_HOME/plugins/gtk``.

Alternative plugin locations
----------------------------

If you have the necessary permissions, plugins can also be installed on a
system-wide basis.  One can additionally override the personal plugins
location by setting the environment variable ``BRZ_PLUGIN_PATH`` (see `User
Reference <../user-reference/configuration-help.html#brz-plugin-path>`_ 
for a detailed explanation).

Listing the installed plugins
-----------------------------

To do this, use the plugins command like this::

    brz plugins

The name, location and version of each plugin installed will be displayed.

New commands added by plugins can be seen by running ``brz help commands``.
The commands provided by a plugin are shown followed by the name of the
plugin in brackets.

Popular plugins
---------------

Here is a sample of some of the more popular plugins.

  ================ ================= ==================================
  Category         Name              Description
  ================ ================= ==================================
  GUI              QBzr              Qt-based GUI tools
  General          brztools          misc. enhancements including shelf
  General          difftools         external diff tool helper
  General          extmerge          external merge tool helper
  Integration      brz-svn           use Subversion as a repository
  Migration        cvsps             migrate CVS patch-sets
  ================ ================= ==================================

Note that there are also a number of plugins for Bazaar that have
not yet been ported to Python 3 and Breezy.

If you wish to write your own plugins, it is not difficult to do.
See `Writing a plugin <writing a plugin.html>`_ in the appendices to get
started. See http://doc.bazaar.canonical.com/plugins/en/ for details.
